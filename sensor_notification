blueprint:
  name: "Notify when sensor drops below threshold (optional cooldown)"
  description: >
    Sends a push notification to selected mobile app devices when a numeric sensor
    goes below a specified threshold. Includes custom message support and an optional cooldown timer.
  domain: automation
  input:
    target_sensor:
      name: Sensor
      description: Select the numeric sensor to monitor.
      selector:
        entity:
          domain: sensor

    threshold:
      name: Threshold
      description: Notify when the sensor value drops below this number.
      default: 30
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"

    custom_message:
      name: Custom Message
      description: Add a message to include with the notification.
      default: "Please check this device soon."
      selector:
        text:

    notify_devices:
      name: Notify Devices
      description: Select one or more mobile-app devices to receive the push notification.
      selector:
        device:
          integration: mobile_app
          multiple: true

    cooldown_minutes:
      name: Cooldown (minutes)
      description: Optional cooldown period before another notification can be sent.
      default: 0
      selector:
        number:
          min: 0
          max: 1440
          step: 5
          unit_of_measurement: "min"

mode: single

trigger:
  - platform: numeric_state
    entity_id: !input target_sensor
    below: !input threshold

variables:
  threshold: !input threshold
  custom_message: !input custom_message
  sensor_name: "{{ state_attr(trigger.entity_id, 'friendly_name') or trigger.entity_id }}"
  sensor_value: "{{ states(trigger.entity_id) }}"
  cooldown: !input cooldown_minutes
  last_triggered: "{{ state_attr(this.entity_id, 'last_triggered') }}"

condition:
  - condition: template
    value_template: >
      {% if cooldown | int(0) == 0 %}
        true
      {% else %}
        {% set last = as_timestamp(last_triggered) %}
        {% set now = as_timestamp(now()) %}
        {{ (now - last) > (cooldown | int(0) * 60) }}
      {% endif %}

action:
  - repeat:
      for_each: !input notify_devices
      sequence:
        - service: notify.mobile_app_{{ device_attr(repeat.item, 'name') | lower | replace(' ', '_') }}
          data:
            title: "⚠️ Sensor Alert"
            message: >
              {{ sensor_name }} dropped below {{ threshold }}%
              (currently {{ sensor_value }}%).
              {{ custom_message }}
