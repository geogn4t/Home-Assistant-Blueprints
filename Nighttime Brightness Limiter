blueprint:
  name: Nighttime Brightness Limiter
  description: >
    When a light is turned on between certain hours, automatically set it to a defined
    brightness after a short delay. Works with overnight time ranges (e.g. 22:00–06:00).
  domain: automation

  input:
    target_light:
      name: Target Light
      description: The light entity to control.
      selector:
        entity:
          domain: light

    start_time:
      name: Start Time
      description: Time to begin applying the brightness limit (e.g., 22:00).
      selector:
        time:

    end_time:
      name: End Time
      description: Time to stop applying the brightness limit (e.g., 06:00).
      selector:
        time:

    brightness:
      name: Brightness Percent
      description: The brightness level (in percent) to apply during the time window.
      default: 20
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
          mode: slider

    delay_seconds:
      name: Delay (seconds)
      description: Small delay to allow the light to fully turn on before adjusting brightness.
      default: 1
      selector:
        number:
          min: 0
          max: 10
          unit_of_measurement: s
          mode: slider

trigger:
  - platform: state
    entity_id: !input target_light
    from: "off"
    to: "on"

# ✅ Works for same-day and overnight ranges (e.g., 22:00–06:00)
condition:
  - condition: template
    value_template: >
      {% set start = strptime(!input start_time, '%H:%M:%S').time() %}
      {% set end = strptime(!input end_time, '%H:%M:%S').time() %}
      {% set now = now().time() %}
      {% if start < end %}
        {{ start <= now <= end }}
      {% else %}
        {{ now >= start or now <= end }}
      {% endif %}

action:
  - delay:
      seconds: !input delay_seconds
  - service: light.turn_on
    target:
      entity_id: !input target_light
    data:
      brightness_pct: !input brightness

mode: single
